---

#  - fail: msg="Please define local client_pkg_dir variable"
#    when: client_pkg_dir == ""

- set_fact:
    dist: "{{ dist_folders[ansible_distribution] }}"
    arch: "{{ arch_folders[ansible_architecture] }}"

#- debug: var=dist
#- debug: var=arch

- fail: msg="Couldn't do the '{{ item }}' var"
  when:
    - (not item is defined) or (item == "")
  with_items:
    - dist
    - arch

- set_fact:
    version: "{{ default_versions[dist] }}"
  when: not version is defined or version == ""

- set_fact:
    ver: "{{ versions[dist][version] }}"

#- debug: var=ver

- set_fact:
    incl_type: "local"
  when: ansible_host == 'localhost'

#- debug: var=incl_type

- name: Ensure packages are installed
  apt:
    name: "{{ item }}"
    state: present
  become: true
  with_items:
    - zip
    - unzip
    - gzip
    - libaio1
    - sudo
  when: dist == "linux"


- set_fact:
    driver:           "{{ driver_types[dist] }}"
    lib_path:         "{{ lib_paths[dist] }}"
    client_path:      "{{ client_pkg_dir | regex_replace( '/$', '' ) }}/{{ dist }}"

- set_fact:
    unzip_path:       "instantclient_{{ ver.lib }}"

#- debug: var=client_path
#- debug: var=unzip_path

- stat: path="{{ client_path }}"
  connection: local
  register: p

# - debug: var=p

- fail: msg="Path does not exist"
  when: (p.stat.exists is defined and p.stat.exists|bool == false)

- fail: msg="Path exists and is a directory"
  when: (not p.stat.isdir is defined or p.stat.isdir|bool == false)

- name: Setting LD_LIBRARY_PATH
  lineinfile:
    dest: /etc/profile.d/oracle_setup.sh
    create: yes
    state: present
    regexp: '^LD_LIBRARY_PATH'
    line: 'export LD_LIBRARY_PATH=/opt/oracle/instantclient_12_2'
  become: true

- include_tasks: client.{{ incl_type }}.yml
